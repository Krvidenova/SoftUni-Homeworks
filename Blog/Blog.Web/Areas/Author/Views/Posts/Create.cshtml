@inject UserManager<User> UserManager
@model PostCreateBindingModel
@{
    ViewData["Title"] = "Create Post";
    var user = await this.UserManager.GetUserAsync(this.User);
    var userFullName = user.FullName;
}

<div class="container" id="post-form">
    <div class="section-top-border">
        <div class="row col-3">
            @if (this.User.IsInRole("Administrator"))
            {
                <a asp-area="Admin" asp-controller="Administration" asp-action="Index" style="font-size: medium">Back to Administration Page</a>
            }
            <a asp-area="Author" asp-controller="Posts" asp-action="Index" style="font-size: medium">Back to Manage Posts Page</a>
        </div>
        <h2 class="mb-10 col-md-6 mx-auto pl-0 text-center">@ViewData["Title"]</h2>
        <div class="row justify-content-center">
            <div class="col-md-8">
                <form asp-area="Author" asp-controller="Posts" asp-action="Create" method="post" enctype="multipart/form-data">
                    <hr/>
                    <div class="form-group m-0">
                        <div class="d-flex justify-content-between">
                            <div class="input-file-container">
                                <p>Header Image</p>
                                <input asp-for="Image" class="input-file" id="my-file" type="file"
                                       onchange="document.getElementById('post-img').src = window.URL.createObjectURL(this.files[0])">
                                <label asp-for="Image" tabindex="0" for="my-file" class="input-file-trigger primary-btn load-more pbtn-2 text-capitalize">
                                    Select a file...
                                </label>
                                <p class="file-return"></p>
                            </div>
                            <div><img id="post-img" height="170px"/></div>
                        </div>
                        <span asp-validation-for="Image" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Headline"></label>
                        <textarea asp-for="@Model.Headline" class="single-input-primary auto-text-area" rows="2"></textarea>
                        <span asp-validation-for="Headline" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Slug"></label>
                        <textarea asp-for="@Model.Slug" class="single-input-primary auto-text-area" rows="2"></textarea>
                        <span asp-validation-for="Slug" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Content"></label>
                        <textarea asp-for="@Model.Content" class="single-input-primary auto-text-area" rows="5"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>
                    @Html.FormGroupFor(m => m.CreationDate)
                    <div class="form-group">
                        <label asp-for="@Model.Categories"></label>
                        @Html.DropDownListFor(model => model.CategoryId, Model.Categories, null, new { @class = "single-input-primary form-select" })
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                    @Html.FormGroupFor(m => m.Tags)
                    <div class="form-group button-group-area text-center">
                        <a href="#" class="genric-btn info circle" id="preview">Preview</a>
                        <button type="submit" class="genric-btn success circle">Create</button>
                        <a asp-action="Index" class="genric-btn default circle">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/image.js"></script>
    <script src="~/js/create-slug.js"></script>
    <script>
        $(function() {
            createSlug("@(Html.IdFor(model => model.Headline))", "@(Html.IdFor(model => model.Slug))");
        });

        $('.auto-text-area').on('keyup keydown change',
            function() {
                $(this).css('height', 'auto');
                $(this).height(this.scrollHeight);
            });
    </script>

    <script>
        $('a#preview').on('click', previewPost);

        function previewPost() {
            $('div#preview-div').remove();

            let author = "@userFullName";
            let category = $('#@(Html.IdFor(model => model.CategoryId)) option:selected').text();
            let headline = $('#@(Html.IdFor(model => model.Headline))').val();
            let content = $('#@(Html.IdFor(model => model.Content))').val();
            let date = $('#@(Html.IdFor(model => model.CreationDate))').val();
            let tags = $('#@(Html.IdFor(model => model.Tags))').val();

            var options = {
                year: 'numeric',
                month: 'short',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            };
            let formatedDate = new Date(date).toLocaleString("en-US", options);

            let container = $('<div class="container alert" id="preview-div">');
            container.append($(
                `<i class="lnr lnr-cross font-weight-bold delete pull-right pt-50"
    data-dismiss="alert" style="font-size: xx-large" title="Close preview"></i>`));

            let post = $('<div class="col-lg-9 mx-auto pt-100">');
            post.append($(`<h2 class="pb-3">Category: ${category}</h2>`));
            let image = $('<img class="img-post" width="100%" id ="photo">');
            post.append(image);
            post.append(`<div class="top-wrapper">
    <div class="row d-flex justify-content-between">
    <h2 class="col-lg-7 col-md-12 text-uppercase">${headline}</h2>
    <div class="col-lg-5 col-md-12 right-side d-flex justify-content-end">
    <div class="desc"><h2>${author}</h2><h3>Published: ${formatedDate}</h3></div>
    <div class="user-img w-25"><img src="/users/avatar.jpg" width="100%"></div>
    </div></div></div>`);

            let tagsArr;
            if (tags !== "") {
                tagsArr = tags.split(',')
                    .map(item => item.trim())
                    .map(item => item.toLowerCase())
                    .map(item => '#'+ item)
                    .filter(item => item !== "");
                let tagUl = $('<ul class="preview-tag">');
                for (let i = 0; i < tagsArr.length; i++) {
                    tagUl.append($(`<li class="tag"><a href="#">${tagsArr[i]}</a></li>`));
                }
                post.append($('<div class="tags">').append(tagUl));
            }

            content = content.replace(new RegExp('STARTQUOTE', 'g'), '<blockquote>');
            content = content.replace(new RegExp('ENDQUOTE', 'g'), '</blockquote>');
            let contentDiv = $('<div class="single-post-content">');
            let contentArr = content.split('\n');
            for (let i = 0; i < contentArr.length; i++) {
                if (contentArr[i].includes('<blockquote>')) {
                    if (contentArr[i].includes('</blockquote>')) {
                        contentDiv.append($('<p class="para">').append(contentArr[i]));
                    } else {
                        let startQuoteIndex = i;
                        let endQuoteIndex;
                        for (let n = i + 1; n < contentArr.length; n++) {
                            if (contentArr[n].includes('</blockquote>')) {
                                endQuoteIndex = n;
                            }
                        }
                        let quote = "";
                        for (var z = startQuoteIndex; z <= endQuoteIndex; z++) {
                            quote = quote + contentArr[z];
                        }
                        contentDiv.append($('<p class="para">').append(quote));
                        i = endQuoteIndex;
                    }                    
                } else {
                    contentDiv.append($('<p class="para">').text(contentArr[i]));
                }
            }
            post.append(contentDiv).append($('<div class="bottom-wrapper">'));

            post.appendTo(container);
            container.insertBefore($('#post-form'));

            let file = $('input#my-file')[0];
            if (file.files[0] !== undefined) {
                document.getElementById('photo').src = window.URL.createObjectURL(file.files[0]);
            }
        }
    </script>
}

